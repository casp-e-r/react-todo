{"version":3,"sources":["component/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","toDos","addTodos","text","setText","removeTask","index","status","remove","splice","window","confirm","n","Date","toDateString","className","value","onChange","e","target","type","placeholder","onClick","length","id","now","map","obj","console","log","filter","obj1","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAuJeA,MAnJf,WAEI,MAAuBC,mBAAS,IAAhC,mBAAMC,EAAN,KAAYC,EAAZ,KACA,EAAqBF,mBAAS,IAA9B,mBAAMG,EAAN,KAAWC,EAAX,KAGMC,EAAW,SAACC,EAAMC,GACpB,GAAIA,EAMC,CACD,IAAMC,EAAO,YAAIP,GACjBO,EAAOC,OAAOH,EAAM,GACpBJ,EAASM,QART,GAAGE,OAAOC,QAAQ,6CAAoB,CAClC,IAAMH,EAAO,YAAIP,GACjBO,EAAOC,OAAOH,EAAM,GACpBJ,EAASM,KAYfI,GAHO,IAAIC,MAGFC,eAOf,OACI,sBAAKC,UAAU,YAAf,UAEI,sBAAKA,UAAU,gBAAf,UACA,gDACA,+BAAKH,EAAL,QACI,uBAAOI,MAAOb,EAAMc,SAAU,SAACC,GAAD,OAAKd,EAAQc,EAAEC,OAAOH,QAAQI,KAAK,OAAOC,YAAY,6BACpF,qBAAKN,UAAU,WAAf,SACA,mBAAGA,UAAU,eAAeO,QAAS,WAC9BnB,EAAKoB,OAAO,GACVrB,EAAS,GAAD,mBAAKD,GAAL,CAAW,CAACuB,GAAGX,KAAKY,MAAMtB,KAAKA,EAAKI,QAAO,MACpDH,EAAQ,YAWpB,6BACaH,EAAMyB,KAAI,SAACC,EAAIrB,GACZ,OAAIqB,EAAIpB,OAoCA,qBAAKQ,UAAU,UAAf,SACA,+BACI,mBAAGA,UAAU,oBAAoBO,QAAS,SAACJ,GACvCU,QAAQC,IAAIF,EAAIpB,QAChBqB,QAAQC,IAAIF,GACZzB,EAASD,EAAM6B,QAAO,SAAAC,GAIlB,OAHGA,EAAKP,KAAKG,EAAIH,KACbO,EAAKxB,QAAQoB,EAAIpB,QAEdwB,OAMbf,MAAOW,EAAIpB,SAGb,sBAAMQ,UAAU,SAAhB,SAA0BY,EAAIxB,OAI9B,mBAAGY,UAAU,mBAAmBO,QAAS,kBAAIjB,EAAWC,EAAMqB,EAAIpB,gBAtDlE,qBAAKQ,UAAU,SAAf,SACA,+BACI,mBAAGA,UAAU,oBAAoBO,QAAS,SAACJ,GACvCU,QAAQC,IAAIF,EAAIpB,QAChBqB,QAAQC,IAAIF,GACZzB,EAASD,EAAM6B,QAAO,SAAAC,GAIlB,OAHGA,EAAKP,KAAKG,EAAIH,KACbO,EAAKxB,QAAQoB,EAAIpB,QAEdwB,OAMbf,MAAOW,EAAIpB,SAGb,+BAAOoB,EAAIxB,OAIX,mBAAGY,UAAU,mBAAmBO,QAAS,kBAAIjB,EAAWC,EAAMqB,EAAIpB,yBCxE/FyB,MANf,WACE,OACE,cAAC,EAAD,KCIWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.79c53771.chunk.js","sourcesContent":["import React,{useState} from 'react'\nimport \"./Todo.css\"\n/* import $ from 'jquery' */\n\nfunction Todo() {\n\n    const[toDos,addTodos]= useState([])\n    const[text,setText]= useState('')\n\n\n    const removeTask=(index,status)=>{\n        if(!status){\n            if(window.confirm('ü§∑‚Äç‚ôÇÔ∏è   sure?...')){\n                const remove=[...toDos]\n                remove.splice(index,1)\n                addTodos(remove)\n            }\n        }else{\n            const remove=[...toDos]\n            remove.splice(index,1)\n            addTodos(remove)\n        }\n        \n    }\n    const date = new Date();\n\n\n    const n = date.toDateString();\n\n\n    \n\n\n    \n    return (\n        <div className=\"container\">\n\n            <div className=\"input-section\">\n            <h1>things to do  </h1>\n            <h3>{n}  </h3>\n                <input value={text} onChange={(e)=>setText(e.target.value)} type=\"text\" placeholder=\"‚úçÔ∏è add tasks..\"/>\n                <div className=\"add-icon\">\n                <i className=\"fas  fa-plus\" onClick={()=>{\n                    if(text.length>0)\n                         addTodos([...toDos,{id:Date.now(),text:text,status:false}])\n                        setText('')\n                    \n                    /* console.log(text)\n                    console.log(toDos) */\n                }}></i>\n                </div>\n                \n                \n            </div>\n\n            \n            <ul>\n                        {toDos.map((obj,index)=>{\n                            if(!obj.status){\n                            \n                                return(\n                                \n                                        <div className=\"active\">\n                                        <li>\n                                            <i className=\" tick fa fa-check\" onClick={(e)=>{\n                                                console.log(obj.status)\n                                                console.log(obj);\n                                                addTodos(toDos.filter(obj1=>{\n                                                    if(obj1.id===obj.id){\n                                                        obj1.status=!obj.status\n                                                    }\n                                                    return obj1\n\n                                                    \n                                                }))\n                                            }\n                                            \n                                            } value={obj.status}></i>\n                                            \n                                        \n                                            <span>{obj.text}</span>\n                                         \n                                            {/* <i className=\"fa fa-pencil-square-o\" ></i> */}\n\n                                            <i className=\"fas fa-trash-alt\" onClick={()=>removeTask(index,obj.status)}></i>\n                                        \n\n                                        </li>\n                                        </div>\n                                \n                                )\n                            }else{\n                                return(\n                                \n                                    <div className=\"active \">\n                                    <li>\n                                        <i className=\" tick fa fa-check\" onClick={(e)=>{\n                                            console.log(obj.status)\n                                            console.log(obj);\n                                            addTodos(toDos.filter(obj1=>{\n                                                if(obj1.id===obj.id){\n                                                    obj1.status=!obj.status\n                                                }\n                                                return obj1\n\n                                                \n                                            }))\n                                        }\n                                        \n                                        } value={obj.status}></i>\n                                        \n                                    \n                                        <span className=\"ticked\">{obj.text}</span>\n                                     \n                                        {/* <i className=\"fa fa-pencil-square-o\" ></i> */}\n\n                                        <i className=\"fas fa-trash-alt\" onClick={()=>removeTask(index,obj.status)}></i>\n                                    \n\n                                    </li>\n                                    </div>\n                            \n                            )\n\n                            }\n                                  \n                            \n                        })}\n            </ul>\n            {/* <ul>\n            {toDos.map((obj)=>{\n                if(obj.status){\n                    return(\n                        <div className=\"done\">\n                            <h1>done</h1>\n                            <li>{obj.text}</li>\n                        </div>\n                    \n                    )\n                }\n                return null\n            })}\n            </ul> */}\n\n            \n                    \n\n        </div>\n    )\n}\n\nexport default Todo;\n","import React from 'react';\n\n\nimport Todo from './component/Todo';\n\n\nfunction App() {\n  return(\n    <Todo/>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}